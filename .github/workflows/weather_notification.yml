name: Daily Weather Notification

on:
  schedule:
    # Run at 9:00 AM every day (UTC timezone)
    - cron: '0 9 * * *'
  workflow_dispatch:  # Allows manual triggering for testing

jobs:
  send_weather_notification:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install requests twilio python-dotenv
          # If requirements.txt exists, install from it
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          fi
          # Print installed packages for debugging
          pip list
        
      - name: Verify environment variables
        run: |
          python - <<'END_PYTHON'
          import os
          import sys
          
          required = ['TWILIO_ACCOUNT_SID', 'TWILIO_AUTH_TOKEN', 'TO_WHATSAPP_NUMBER', 'OPENWEATHER_API_KEY']
          missing = [var for var in required if not os.environ.get(var)]
          
          if not os.environ.get('TWILIO_FROM_NUMBER') and not os.environ.get('TWILIO_MESSAGING_SID'):
              missing.append('TWILIO_FROM_NUMBER or TWILIO_MESSAGING_SID')
          
          if missing:
              print('Error: Missing required environment variables: ' + ', '.join(missing))
              sys.exit(1)
          
          print('All required environment variables are set')
          for var in required:
              if os.environ.get(var):
                  print(f'✓ {var} is set')
              else:
                  print(f'✗ {var} is NOT set')
          
          if os.environ.get('TWILIO_FROM_NUMBER'):
              print('✓ TWILIO_FROM_NUMBER is set')
          else:
              print('✗ TWILIO_FROM_NUMBER is NOT set')
          
          if os.environ.get('TWILIO_MESSAGING_SID'):
              print('✓ TWILIO_MESSAGING_SID is set')
          else:
              print('✗ TWILIO_MESSAGING_SID is NOT set')
          END_PYTHON
        env:
          TWILIO_ACCOUNT_SID: ${{ secrets.TWILIO_ACCOUNT_SID }}
          TWILIO_AUTH_TOKEN: ${{ secrets.TWILIO_AUTH_TOKEN }}
          TWILIO_FROM_NUMBER: ${{ secrets.TWILIO_FROM_NUMBER }}
          TWILIO_MESSAGING_SID: ${{ secrets.TWILIO_MESSAGING_SID }}
          TO_WHATSAPP_NUMBER: ${{ secrets.TO_WHATSAPP_NUMBER }}
          OPENWEATHER_API_KEY: ${{ secrets.OPENWEATHER_API_KEY }}
          CITY: ${{ secrets.CITY }}
          
      - name: Send Weather WhatsApp Message
        id: send_message
        env:
          TWILIO_ACCOUNT_SID: ${{ secrets.TWILIO_ACCOUNT_SID }}
          TWILIO_AUTH_TOKEN: ${{ secrets.TWILIO_AUTH_TOKEN }}
          TWILIO_FROM_NUMBER: ${{ secrets.TWILIO_FROM_NUMBER }}
          TWILIO_MESSAGING_SID: ${{ secrets.TWILIO_MESSAGING_SID }}
          TO_WHATSAPP_NUMBER: ${{ secrets.TO_WHATSAPP_NUMBER }}
          OPENWEATHER_API_KEY: ${{ secrets.OPENWEATHER_API_KEY }}
          CITY: ${{ secrets.CITY }}
          GITHUB_ACTIONS: "true"
        run: |
          # Print Python version for debugging
          python --version
          
          # Run the script with unbuffered output
          echo "Running weather notification script..."
          python -u weather_whatsapp.py
          echo "Script completed successfully"
      
      - name: Show failure message
        if: failure()
        run: |
          echo "::error::Weather notification workflow failed. Check the logs for details." 